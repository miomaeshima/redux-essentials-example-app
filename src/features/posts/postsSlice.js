import { createSlice } from '@reduxjs/toolkit';

const initialState = [
    { id: '1', title: 'First Post!', content: 'Hello!' },
    { id: '2', title: 'Second Post', content: 'More text' },
];

const postsSlice = createSlice({
    name: 'posts',
    initialState,
    reducers: {
        //function named `postAdded` that takes two arguments: the current `state` value and the `action` object that was dispatched. Writing this function triggers createSlice to automatically generate an "action creator" function with the same name. We can export this action creator and use it in UI components to dispatch the action when the user clicks "Save Post". See below where postsSlice.actions is exported.
        //It's safe to call mutating functions like "state.push()"" or modify object fields like "state.someField = someValue" INSIDE OF createSlice().
        postAdded(state, action) {
            state.push(action.payload);
        },
    },
});
//When postAdded reducer function is written, createSlice automatically generates and "action creator" function with the same name.
export const { postAdded } = postsSlice.actions;

//postsSlice.reducer function is generated by createSlice

export default postsSlice.reducer;
